{"version":3,"file":"static/js/507.7d83db05.chunk.js","mappings":"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","sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","_rgb","_valid","valid","obj","rgbString","hslString","mix","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","next","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","previous","sameItem","itemsEqual","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","role","forwardRef","createTypedChart","registerables","Doughnut"],"sourceRoot":""}