{"version":3,"file":"static/js/417.ccec0f3b.chunk.js","mappings":"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","sources":["components/Statistics/statisticsDataTable.styled.js","components/Statistics/statiscticsColors.js","components/Statistics/StatisticsDataTable.js","components/Statistics/dateSelector/dateSelector.styled.js","components/Statistics/dateSelector/dateSelector.js","components/Statistics/datePicker.js","components/Statistics/statisticsChart.styled.js","components/Statistics/statisticsChart.js","redux/statistics/statisticsSelectors.js","pages/StatisticsPage/Statistics.js","pages/StatisticsPage/Statistics.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const Head = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  border-radius: 8px;\n  background: rgba(82, 59, 126, 0.6);\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n\n  padding: 16px 16px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 16px 28px;\n    margin-bottom: 0;\n  }\n`;\nexport const HeadText = styled.div`\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\n\nexport const Body = styled.div`\n  margin-bottom: 16px;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const Footer = styled.div`\n  font-weight: bold;\n  .income {\n    color: var(--yellow);\n  }\n\n  .expenses {\n    color: var(--dashboard-text);\n  }\n`;\nexport const Expenses = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  margin-bottom: 16px;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0px 28px;\n  }\n`;\nexport const Income = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0px 28px;\n  }\n`;\n\nexport const ColorBox = styled.div`\n  display: block;\n  min-width: 24px;\n  min-height: 24px;\n  background-color: ${props => props.color};\n  border-radius: 2px;\n`;\n\nexport const StyledTdCat = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledTdSum = styled.div`\n  text-align: end;\n`;\n\nexport const StyledTr = styled.div`\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  padding: 16px 16px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 16px 28px;\n  }\n`;\nexport const StyledThCat = styled.div`\n  text-align: start;\n`;\nexport const RowText = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-left: 16px;\n`;\nexport const StyledThSum = styled.div`\n  text-align: end;\n`;\n\nexport const StyledTdTotal = styled.div`\n  text-align: end;\n`;\n","export const colors = [\n  { name: 'Main expenses', color: '#FED057' },\n  { name: 'Products', color: '#FFD8D0' },\n  { name: 'Car', color: '#FD9498' },\n  { name: 'Self care', color: '#C5BAFF' },\n  { name: 'Child care', color: '#6E78E8' },\n  { name: 'Household products', color: '#4A56E2' },\n  { name: 'Education', color: '#81E1FF' },\n  { name: 'Leisure', color: '#24CCA7' },\n  { name: 'Other expenses', color: '#00AD84' },\n  { name: 'Entertainment', color: '#FF69B4' },\n  { name: 'Income', color: '#FFB627' },\n];\n","import {\n  Body,\n  ColorBox,\n  Container,\n  Expenses,\n  Footer,\n  Head,\n  HeadText,\n  Income,\n  RowText,\n  StyledTdCat,\n  StyledTdSum,\n  StyledTdTotal,\n  StyledTr,\n} from './statisticsDataTable.styled';\nimport { colors } from './statiscticsColors';\n\nexport const DataTable = ({ reduxData }) => {\n  return (\n    <Container>\n      <Head>\n        <HeadText>\n          <span>Category</span>\n        </HeadText>\n        <HeadText>\n          <span>Sum</span>\n        </HeadText>\n      </Head>\n      <Body>\n        {reduxData.categoryExpenses\n          .filter(category => category.total !== '0.00')\n          .map(category => {\n            const boxColor = colors.find(color => color.name === category.name);\n            return (\n              <StyledTr key={category.name}>\n                <StyledTdCat>\n                  <ColorBox color={boxColor.color} />\n                  <RowText>\n                    <span>{category.name}</span>\n                    <StyledTdSum>{category.total}</StyledTdSum>\n                  </RowText>\n                </StyledTdCat>\n              </StyledTr>\n            );\n          })}\n      </Body>\n      <Footer>\n        <Expenses>\n          <span>Expenses:</span>\n          <StyledTdTotal className=\"expenses\">\n            {reduxData.totalExpenses.toFixed(2)}\n          </StyledTdTotal>\n        </Expenses>\n        <Income>\n          <span>Income:</span>\n          <StyledTdTotal className=\"income\">\n            {reduxData.totalIncome.toFixed(2)}\n          </StyledTdTotal>\n        </Income>\n      </Footer>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const StyledDateSelector = styled(Select)`\n  font-size: 18px;\n  width: 280px;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 158px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 181px;\n  }\n\n  .Select__control {\n    background-color: transparent;\n    height: 50px;\n    width: 100%;\n    border: 0;\n    box-shadow: none;\n    cursor: pointer;\n    color: rgba(251, 251, 251, 1);\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.6);\n    background: rgba(74, 86, 226, 0.1);\n\n    :hover {\n      border: 1px solid rgba(255, 255, 255, 0.6);\n    }\n  }\n\n  .Select__placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n\n  .Select__single-value {\n    color: rgba(251, 251, 251, 1);\n  }\n\n  .Select__control--is-focused {\n    border: 0;\n    outline: none;\n    box-shadow: 5px 0px 50px 10px rgba(0, 0, 0, 0.15);\n    border: 1px solid rgba(255, 255, 255, 0.6);\n  }\n\n  .Select__indicator-separator {\n    display: none;\n  }\n\n  .Select__indicator {\n    color: rgba(255, 255, 255, 0.1);\n    width: auto;\n  }\n\n  .Select__menu {\n    background: linear-gradient(\n      210deg,\n      rgba(83, 61, 186, 1) 0%,\n      rgba(80, 48, 154, 1) 43.14%,\n      rgba(106, 70, 165, 1) 73.27%,\n      rgba(133, 93, 175, 0.9) 120.03%\n    );\n    box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n    color: rgba(251, 251, 251, 1);\n    font-size: 16px;\n    border-radius: 8px;\n    max-height: 352px;\n  }\n\n  .Select__menu-list {\n    height: 100%;\n  }\n\n  .css-t3ipsp-control {\n    border: 1px solid rgba(255, 255, 255, 0.6);\n  }\n  .Select__option--is-focused {\n    color: rgba(255, 134, 141, 1);\n    background-color: rgba(255, 255, 255, 0.1);\n    cursor: pointer;\n  }\n  .Select__option--is-selected {\n    color: rgba(255, 134, 141, 1);\n    background-color: rgba(255, 255, 255, 0);\n    cursor: pointer;\n  }\n\n  .Select__dropdown-indicator {\n    color: rgba(251, 251, 251, 1);\n\n    &:hover {\n      color: rgba(251, 251, 251, 1);\n    }\n  }\n`;\n","import { components } from 'react-select';\nimport { VscChevronDown, VscChevronUp } from 'react-icons/vsc';\nimport { StyledDateSelector } from './dateSelector.styled';\n\nconst DropdownIndicator = props => {\n  if (props.isF) {\n    return (\n      <components.DropdownIndicator {...props}>\n        <VscChevronUp />\n      </components.DropdownIndicator>\n    );\n  }\n  return (\n    <components.DropdownIndicator {...props}>\n      <VscChevronDown />\n    </components.DropdownIndicator>\n  );\n};\n\nconst customScrollbarStyles = {\n  menuList: provided => ({\n    ...provided,\n    '&::-webkit-scrollbar': {\n      width: '6px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#BFB4DD',\n      borderRadius: '12px',\n    },\n  }),\n};\n\nexport const DateSelector = ({ onChange, options, value, className }) => {\n  const defaultValue = (options, value) => {\n    return options ? options.find(option => option.value === value) : '';\n  };\n\n  return (\n    <div className={className}>\n      <StyledDateSelector\n        value={defaultValue(options, value)}\n        placeholder=\"Select a category\"\n        components={{ DropdownIndicator }}\n        onChange={value => onChange(value)}\n        options={options}\n        classNamePrefix=\"Select\"\n        styles={customScrollbarStyles}\n      />\n    </div>\n  );\n};\n","import React, { Fragment } from 'react';\nimport 'url-search-params-polyfill';\nimport { DateSelector } from './dateSelector/dateSelector';\n\nfunction DatePicker({ getYear, getMonth, selectedMonth, selectedYear }) {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const customScrollbarStyles = {\n    menuList: provided => ({\n      ...provided,\n      '&::-webkit-scrollbar': {\n        width: '6px',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        backgroundColor: '#BFB4DD',\n        borderRadius: '12px',\n      },\n    }),\n  };\n\n  const monthOptions = monthNames.map((month, index) => ({\n    value: index + 1,\n    label: month,\n  }));\n  const currentYear = new Date().getFullYear();\n  const yearOptions = Array.from({ length: 10 }, (_, index) => ({\n    value: currentYear - index,\n    label: String(currentYear - index),\n  }));\n  return (\n    <Fragment>\n      <DateSelector\n        options={monthOptions}\n        value={selectedMonth}\n        onChange={getMonth}\n        className=\"selectMonth\"\n        name=\"selectMonth\"\n      />\n      <DateSelector\n        options={yearOptions}\n        value={selectedYear}\n        onChange={getYear}\n        className=\"selectYear\"\n        name=\"selectYear\"\n        styles={customScrollbarStyles}\n      />\n    </Fragment>\n  );\n}\n\nexport default DatePicker;\n","import styled from 'styled-components';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const Balance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: var(--dashboard-text);\n\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const DonutContainer = styled.div`\n  max-width: 100%;\n  /* width: auto; */\n  /* height: auto; */\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: auto;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1267px) {\n    margin-top: 20px;\n    //max-width: 100%;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const DoughnutSt = styled(Doughnut)``;\n","import { ArcElement, Tooltip, Legend, Chart } from 'chart.js';\nimport { colors } from './statiscticsColors';\nimport { Balance, DonutContainer, DoughnutSt } from './statisticsChart.styled';\n\nChart.register(ArcElement, Tooltip, Legend);\n\nconst StatiscticsChart = ({ reduxData, categories }) => {\n  const chartData = {\n    labels: categories,\n    datasets: [\n      {\n        data: reduxData.categoryExpenses.map(category => category.total),\n        backgroundColor: categories.map(item => {\n          const colorInfo = colors.find(colorItem => colorItem.name === item);\n          return colorInfo ? colorInfo.color : '#ffff';\n        }),\n        borderWidth: 0.5,\n        cutout: '60%',\n      },\n    ],\n  };\n  const options = {\n    borderRadius: 2,\n    hoverBorderWidth: 1,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n    },\n  };\n  return (\n    <DonutContainer>\n      <Balance\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        ₴ {reduxData.totalExpenses.toFixed(2)}\n      </Balance>\n      <DoughnutSt data={chartData} options={options} />\n    </DonutContainer>\n  );\n};\n\nexport default StatiscticsChart;\n","export const selectStatisticsData = state => state.statistics.statisticsData;\nexport const selectCategories = state => state.statistics.categories;\n","import { SpinnerLoader } from 'components/Spinner/Spinner';\nimport { DataTable } from 'components/Statistics/StatisticsDataTable';\nimport DatePicker from 'components/Statistics/datePicker';\nimport StatiscticsChart from 'components/Statistics/statisticsChart';\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCategories,\n  getStatistics,\n} from 'redux/statistics/statisticsOperations';\nimport {\n  selectCategories,\n  selectStatisticsData,\n} from 'redux/statistics/statisticsSelectors';\n\nconst {\n  StatSection,\n  RightSideStatWrapper,\n  DatePickerWrapper,\n  DataWrapper,\n  TitleStyled,\n  LeftSideWrapper,\n} = require('./Statistics.styled');\nconst StatiscticsPage = () => {\n  const dispatch = useDispatch();\n\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [query, setQuery] = useState(\n    generateParams(selectedYear, selectedMonth)\n  );\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n  function generateParams(year, month) {\n    const params = new URLSearchParams();\n    params.append('year', year);\n    params.append('month', month);\n    return params.toString();\n  }\n  useEffect(() => {\n    const newQuery = generateParams(selectedYear, selectedMonth);\n    setQuery(newQuery);\n  }, [selectedYear, selectedMonth, query]);\n\n  useEffect(() => {\n    dispatch(getStatistics(query));\n  }, [query, dispatch]);\n  const reduxData = useSelector(selectStatisticsData);\n  const categories = useSelector(selectCategories);\n\n  const handleYearChange = event => {\n    setSelectedYear(event.value);\n  };\n\n  const handleMonthChange = event => {\n    setSelectedMonth(event.value);\n  };\n\n  return (\n    <StatSection>\n      <Helmet>\n        <title>Statisctics</title>\n      </Helmet>\n      <RightSideStatWrapper>\n        <LeftSideWrapper>\n          <TitleStyled>Statistics</TitleStyled>\n\n          {categories && reduxData ? (\n            <StatiscticsChart\n              reduxData={reduxData}\n              categories={categories}\n              style={{\n                boxSizing: 'border-box',\n                display: 'block',\n                height: '100%',\n                width: '100%',\n              }}\n            />\n          ) : (\n            <SpinnerLoader />\n          )}\n        </LeftSideWrapper>\n        <DataWrapper>\n          <DatePickerWrapper>\n            <DatePicker\n              getYear={handleYearChange}\n              getMonth={handleMonthChange}\n              selectedMonth={selectedMonth}\n              selectedYear={selectedYear}\n            />\n          </DatePickerWrapper>\n          {categories && reduxData ? (\n            <DataTable reduxData={reduxData} />\n          ) : (\n            <SpinnerLoader />\n          )}\n        </DataWrapper>\n      </RightSideStatWrapper>\n    </StatSection>\n  );\n};\nexport default StatiscticsPage;\n","import styled from 'styled-components';\nexport const StatSection = styled.div`\n  color: var(--white);\n  margin-top: 40px;\n  width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  max-width: 100%;\n  padding: 0px 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin: 0 0 0 -444px;\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 40px 0 0 0;\n    padding: 0;\n  }\n`;\n\nexport const RightSideStatWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: flex;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n  }\n`;\nexport const LeftSideWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-right: 68px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-right: 32px;\n    margin-left: 69px;\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  margin-top: 32px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-top: 10px;\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\nexport const DataWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 45px;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\nexport const TitleStyled = styled.h1`\n  color: var(--white, #fbfbfb);\n  text-align: start;\n  font-family: Poppins;\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin: 0;\n`;\n"],"names":["Container","styled","div","Head","HeadText","Body","Footer","Expenses","Income","ColorBox","props","color","StyledTdCat","StyledTdSum","StyledTr","RowText","StyledTdTotal","colors","name","DataTable","_ref","reduxData","_jsxs","children","_jsx","categoryExpenses","filter","category","total","map","boxColor","find","className","totalExpenses","toFixed","totalIncome","StyledDateSelector","Select","DropdownIndicator","isF","components","VscChevronUp","VscChevronDown","customScrollbarStyles","menuList","provided","width","backgroundColor","borderRadius","DateSelector","onChange","options","value","defaultValue","option","placeholder","classNamePrefix","styles","getYear","getMonth","selectedMonth","selectedYear","monthOptions","month","index","label","currentYear","Date","getFullYear","yearOptions","Array","from","length","_","String","Fragment","Balance","DonutContainer","DoughnutSt","Doughnut","Chart","register","ArcElement","Tooltip","Legend","categories","chartData","labels","datasets","data","item","colorInfo","colorItem","borderWidth","cutout","style","position","top","left","transform","hoverBorderWidth","plugins","legend","display","tooltip","enabled","selectStatisticsData","state","statistics","statisticsData","selectCategories","StatSection","RightSideStatWrapper","DatePickerWrapper","DataWrapper","TitleStyled","LeftSideWrapper","require","StatiscticsPage","dispatch","useDispatch","setSelectedYear","useState","setSelectedMonth","query","setQuery","generateParams","year","params","URLSearchParams","append","toString","useEffect","getCategories","newQuery","getStatistics","useSelector","Helmet","StatiscticsChart","boxSizing","height","SpinnerLoader","DatePicker","event","h1"],"sourceRoot":""}